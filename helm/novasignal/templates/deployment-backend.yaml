{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "novasignal.fullname" . }}-backend
  labels:
    {{- include "novasignal.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "novasignal.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.backend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "novasignal.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.backend.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "novasignal.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.securityContext | nindent 8 }}
      initContainers:
        - name: wait-for-redis
          image: redis:7-alpine
          command:
            - sh
            - -c
            - |
              until redis-cli -h {{ include "novasignal.redis.host" . }} -p {{ include "novasignal.redis.port" . }} ping; do
                echo "Waiting for Redis..."
                sleep 2
              done
              echo "Redis is ready!"
      containers:
        - name: backend
          image: "{{ .Values.backend.image.registry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            {{- range $key, $value := .Values.backend.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: REDIS_URL
              value: "redis://{{ include "novasignal.redis.host" . }}:{{ include "novasignal.redis.port" . }}"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "novasignal.fullname" . }}-secrets
                  key: database-url
                  optional: true
          envFrom:
            - configMapRef:
                name: {{ include "novasignal.fullname" . }}-config
            - secretRef:
                name: {{ include "novasignal.fullname" . }}-secrets
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          volumeMounts:
            - name: logs-volume
              mountPath: /app/logs
            - name: tmp-volume
              mountPath: /tmp
      volumes:
        - name: logs-volume
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "novasignal.fullname" . }}-logs
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: tmp-volume
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}