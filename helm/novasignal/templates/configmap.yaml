# Application ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "novasignal.fullname" . }}-config
  labels:
    {{- include "novasignal.labels" . | nindent 4 }}
data:
  # Environment configuration
  ENVIRONMENT: {{ .Values.environment | quote }}
  API_URL: {{ .Values.api.url | quote }}
  WS_URL: {{ .Values.websocket.url | quote }}
  
  # Redis configuration
  REDIS_HOST: {{ include "novasignal.redis.host" . }}
  REDIS_PORT: {{ include "novasignal.redis.port" . }}
  
  # Database configuration
  DATABASE_HOST: {{ include "novasignal.database.host" . }}
  DATABASE_PORT: {{ include "novasignal.database.port" . }}
  
  # Application settings
  LOG_LEVEL: {{ .Values.logging.level | quote }}
  CORS_ORIGINS: {{ .Values.cors.origins | quote }}
  SESSION_TIMEOUT: {{ .Values.session.timeout | quote }}
  
  # Feature flags
  ENABLE_METRICS: {{ .Values.features.metrics | quote }}
  ENABLE_WEBSOCKETS: {{ .Values.features.websockets | quote }}
  ENABLE_REDIS_CACHE: {{ .Values.features.cache | quote }}
---
# Nginx ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "novasignal.fullname" . }}-nginx-config
  labels:
    {{- include "novasignal.labels" . | nindent 4 }}
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        keepalive_timeout 65;
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private must-revalidate auth;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/x-javascript
            application/xml+rss
            application/javascript
            application/json
            application/xml
            application/rss+xml
            application/atom+xml
            image/svg+xml;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        include /etc/nginx/conf.d/*.conf;
    }
---
# Nginx default site ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "novasignal.fullname" . }}-nginx-default-config
  labels:
    {{- include "novasignal.labels" . | nindent 4 }}
data:
  default.conf: |
    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/x-javascript
            application/xml+rss
            application/javascript
            application/json
            application/xml
            application/rss+xml
            application/atom+xml
            image/svg+xml;

        # Static assets with cache headers
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Frame-Options DENY always;
            add_header X-Content-Type-Options nosniff always;
        }

        # Main application
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }